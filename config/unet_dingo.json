{
  "model": {
    "class" : "gan.model.Generator",
    "args" : {
      "encoder_layout": [
        [64, 1],
        [64, 2],
        [128, 2],
        [256, 2],
        [512, 2],
        [512, 2],
        [512, 2],
        [512, 2]
      ],
      "decoder_layout": [
        [512, 2],
        [512, 2],
        [512, 2],
        [256, 2],
        [128, 2],
        [64, 2],
        [64, 2]
      ]
    }
  },
  "solver": {
    "class": "gan.solver.UnetSolver",
    "config": {
      "device": "cuda:0",
      "dtype": "torch.float32",
      "iterations": 200000,
      "batch_size": 40,
      "dataloader_workers": 4,

      "train_path": "/hdd/adi/places/train",
      "train_mask": "./masks/places_train.txt",

      "val_path": "/hdd/adi/places/val",
      "val_mask": "./masks/places_val.txt",
      "val_data_size": 15000,


      "optimizer": {
        "class": "torch.optim.Adam",
        "args": {
          "lr": 1e-4,
          "weight_decay": 1e-3,
          "betas": [0.5, 0.99]
        }
      },
      "transforms": [
        {
          "class": "util.module.ShortResize",
          "args": {
            "size": 256
          }
        },
        {
          "class": "torchvision.transforms.RandomCrop",
          "args": {
            "size": 256
          }
        },
        {
          "class": "util.module.rgb2lab",
          "args": {}
        },
        {
          "class": "torchvision.transforms.ToTensor",
          "args": {}
        }
      ],

      "listeners": [
        {
          "class": "util.listener.LossLogger",
          "args": {
            "format": "({0}, {1})\n",
            "output": "./gan/data/desmos.log"
          }
        },
        {
          "class": "util.listener.OutputLogger",
          "args": {
            "output": "./gan/data/out.log"
          }
        },
        {
          "class": "util.listener.OutputLogger",
          "args": {}
        },
        {
          "class": "util.listener.Validator",
          "args": {
            "frequency": 1000,
            "output": "./gan/data/val.log",
            "save_every": 5,
            "snapshot_dir": "./colorful/data/snapshots"
          }
        },
        {
          "class": "util.listener.Backup",
          "args": {
            "frequency": 500,
            "save_dir": "./gan/data",
            "config_file": "backup_config.json",
            "save_file": "backup_model.pth"
          }
        },
        {
          "class": "util.listener.ColorizeLogger",
          "args": {
            "frequency": 50,
            "directory": "./gan/data/progress/"
          }
        }
      ]
    },
    "derived": {}
  },
  "restore": false
}